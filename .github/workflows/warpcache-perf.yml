name: WarpCache Run Test

on:
  push:
    branches:
      - perf-test-warpcache
  workflow_dispatch:

env:
  WARPBUILD_CACHE_URL: https://cache.dev.warpbuild.dev

jobs:
  perf-test:
    strategy:
      matrix:
        os: [warpdev-ubuntu-latest-x64-4x, ubuntu-latest]
        # Size is given in MB
        size: [5000]
        # Use run to test single job performance across multiple runs
        # run: [10, 20, 30, 40, 50, 60, 70, 80, 90]
        # Use jobs to test multiple concurrent jobs performance
        jobs: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Create a temp directory
        run: mkdir -p temp
      # Uncomment to generate upload test data
      - name: Generate ${{matrix.size}}MB data from urandom
        run: dd if=/dev/urandom of=temp/${{matrix.size}}MB bs=1M count=${{ matrix.size }}
      # Use this to test single concurrent job performance
      # - name: Sleep
      #   run: sleep ${{ matrix.run }}
      - name: WarpCache
        if: matrix.os == 'warpdev-ubuntu-latest-x64-4x'
        uses: WarpBuilds/cache@v1.1.10-beta.1
        with:
          path: temp/
          key: perf-test-${{ matrix.size }}MB-${{ matrix.jobs }}-10s
      - name: Cache
        if: matrix.os == 'ubuntu-latest'
        uses: actions/cache@v4.0.2
        with:
          path: temp/
          key: perf-test-${{ matrix.size }}MB-${{ matrix.jobs }}-10s

  calculate-median:
    # This script will log the median runtime of WarpCache and Cache steps and their respective Post steps.
    runs-on: warpdev-ubuntu-latest-x64-4x
    needs: perf-test
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Node.js dependencies
        run: |
          npm install @octokit/rest

      - name: Calculate median runtime
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: node .github/scripts/calculate_median.js